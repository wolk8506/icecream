{"version":3,"sources":["snowfall.js"],"names":["browserWidth","browserHeight","snowflakes","numberOfSnowflakes","resetPosition","enableAnimations","reduceMotionQuery","matchMedia","setAccessibilityState","matches","setup","window","addEventListener","generateSnowflakes","setResetFlag","Snowflake","element","speed","xPos","yPos","scale","counter","sign","Math","random","style","opacity","setTransform","el","transform","originalSnowflake","document","querySelector","snowflakeContainer","parentNode","display","documentElement","clientWidth","clientHeight","i","snowflakeClone","cloneNode","appendChild","initialXPos","getPosition","initialYPos","snowflakeObject","push","removeChild","moveSnowflakes","length","snowflake","update","requestAnimationFrame","offset","size","round","e","addListener","prototype","cos","sin","abs"],"mappings":";AACA,IAGIA,EACAC,EAJAC,EAAa,GAObC,EAAqB,GAGrBC,GAAgB,EAGhBC,GAAmB,EACnBC,EAAoBC,WAAW,4BAGnC,SAASC,IAELH,GADEC,EAAkBG,QAaxB,SAASC,IACHL,IACFM,OAAOC,iBAAiB,mBAAoBC,GAAoB,GAChEF,OAAOC,iBAAiB,SAAUE,GAAc,IAQpD,SAASC,EAAUC,EAASC,EAAOC,EAAMC,GAElCH,KAAAA,QAAUA,EACVC,KAAAA,MAAQA,EACRC,KAAAA,KAAOA,EACPC,KAAAA,KAAOA,EACPC,KAAAA,MAAQ,EAGRC,KAAAA,QAAU,EACVC,KAAAA,KAAOC,KAAKC,SAAW,GAAM,GAAK,EAGlCR,KAAAA,QAAQS,MAAMC,SAAW,GAAMH,KAAKC,UAAY,EAyBvD,SAASG,EAAaT,EAAMC,EAAMC,EAAOQ,GACvCA,EAAGH,MAAMI,yBAA2BX,QAAWC,iBAAoBC,MAAUA,KAM/E,SAASP,IAEHiB,IAAAA,EAAoBC,SAASC,cAAc,cAG3CC,EAAqBH,EAAkBI,WAC3CD,EAAmBR,MAAMU,QAAU,QAGnCnC,EAAe+B,SAASK,gBAAgBC,YACxCpC,EAAgB8B,SAASK,gBAAgBE,aAGpC,IAAA,IAAIC,EAAI,EAAGA,EAAIpC,EAAoBoC,IAAK,CAEvCC,IAAAA,EAAiBV,EAAkBW,WAAU,GACjDR,EAAmBS,YAAYF,GAG3BG,IAAAA,EAAcC,EAAY,GAAI5C,GAC9B6C,EAAcD,EAAY,GAAI3C,GAI9B6C,EAAkB,IAAI/B,EAAUyB,EAHxB,EAAoB,GAAhBjB,KAAKC,SAGsCmB,EAAaE,GAExE3C,EAAW6C,KAAKD,GAIlBb,EAAmBe,YAAYlB,GAE/BmB,IAMF,SAASA,IACH5C,GAAAA,EACG,IAAA,IAAIkC,EAAI,EAAGA,EAAIrC,EAAWgD,OAAQX,IAAK,EACtCY,EAAYjD,EAAWqC,IACjBa,SAKVhD,GAAAA,EAAe,CACjBJ,EAAe+B,SAASK,gBAAgBC,YACxCpC,EAAgB8B,SAASK,gBAAgBE,aAEpC,IAAIC,EAAI,EAAGA,EAAIrC,EAAWgD,OAAQX,IAAK,CACtCY,IAAAA,GAAAA,EAAYjD,EAAWqC,IAEjBrB,KAAO0B,EAAY,GAAI5C,GACjCmD,EAAUhC,KAAOyB,EAAY,GAAI3C,GAGnCG,GAAgB,EAGlBiD,sBAAsBJ,GAKxB,SAASL,EAAYU,EAAQC,GACpBhC,OAAAA,KAAKiC,OAAO,EAAIF,EAAS/B,KAAKC,UAAY+B,EAAO,EAAID,IAM9D,SAASxC,EAAa2C,GACpBrD,GAAgB,EAzIlBI,IAEAF,EAAkBoD,YAAYlD,GAW9BE,IAwBAK,EAAU4C,UAAUP,OAAS,WAEtB/B,KAAAA,SAAW,KAAKJ,MAAQ,IACxBC,KAAAA,MAAS,KAAKI,KAAO,KAAKL,MAAQM,KAAKqC,IAAI,KAAKvC,SAAY,GAC5DF,KAAAA,MAAQI,KAAKsC,IAAI,KAAKxC,SAAW,GAAK,KAAKJ,MAAQ,GACnDG,KAAAA,MAAQ,GAAMG,KAAKuC,IAAK,GAAKvC,KAAKqC,IAAI,KAAKvC,SAAY,IAG5DM,EAAaJ,KAAKiC,MAAM,KAAKtC,MAAOK,KAAKiC,MAAM,KAAKrC,MAAO,KAAKC,MAAO,KAAKJ,SAGxE,KAAKG,KAAOlB,IACTkB,KAAAA,MAAQ","file":"snowfall.4962e659.js","sourceRoot":"../src","sourcesContent":["// Массив для хранения объектов Snowflake\nvar snowflakes = [];\n\n// Глобальные переменные для размера окна браузера\nvar browserWidth;\nvar browserHeight;\n\n// Указываем количество снежинок, которые должны быть видимыми\nvar numberOfSnowflakes = 50;\n\n// Флаг для сброса положения снежинок\nvar resetPosition = false;\n\n// Устанавливаем параметр enableAnimations\nvar enableAnimations = false;\nvar reduceMotionQuery = matchMedia('(prefers-reduced-motion)');\n\n// Изменяем значение enableAnimations\nfunction setAccessibilityState() {\n  if (reduceMotionQuery.matches) {\n    enableAnimations = false;\n  } else {\n    enableAnimations = true;\n  }\n}\nsetAccessibilityState();\n\nreduceMotionQuery.addListener(setAccessibilityState);\n\n//\n// Все начинается здесь...\n//\nfunction setup() {\n  if (enableAnimations) {\n    window.addEventListener('DOMContentLoaded', generateSnowflakes, false);\n    window.addEventListener('resize', setResetFlag, false);\n  }\n}\nsetup();\n\n//\n// Конструктор объекта Snowflake\n//\nfunction Snowflake(element, speed, xPos, yPos) {\n  // устанавливаем начальные свойства снежинки\n  this.element = element;\n  this.speed = speed;\n  this.xPos = xPos;\n  this.yPos = yPos;\n  this.scale = 1;\n\n  // объявляем переменные, используемые для движения снежинки\n  this.counter = 0;\n  this.sign = Math.random() < 0.5 ? 1 : -1;\n\n  // устанавливаем значения начальной непрозрачности и размера снежинки\n  this.element.style.opacity = (0.1 + Math.random()) / 3;\n}\n\n//\n// Функция, ответственная за перемещение снежинки\n//\nSnowflake.prototype.update = function () {\n  // используем тригонометрию, чтобы определить позицию x и y\n  this.counter += this.speed / 5000;\n  this.xPos += (this.sign * this.speed * Math.cos(this.counter)) / 40;\n  this.yPos += Math.sin(this.counter) / 40 + this.speed / 30;\n  this.scale = 0.5 + Math.abs((10 * Math.cos(this.counter)) / 20);\n\n  // устанавливаем позицию снежинки\n  setTransform(Math.round(this.xPos), Math.round(this.yPos), this.scale, this.element);\n\n  // если снежинка опустится ниже окна браузера, переместим ее обратно наверх\n  if (this.yPos > browserHeight) {\n    this.yPos = -50;\n  }\n};\n\n//\n// Эффективный способ установить положение и размер снежинки\n//\nfunction setTransform(xPos, yPos, scale, el) {\n  el.style.transform = `translate3d(${xPos}px, ${yPos}px, 0) scale(${scale}, ${scale})`;\n}\n\n//\n// Функция, ответственная за создание снежинки\n//\nfunction generateSnowflakes() {\n  // получаем элемент снежинки из DOM и сохраняем его\n  var originalSnowflake = document.querySelector('.snowflake');\n\n  // получаем доступ к контейнеру родителя элемента снежинки\n  var snowflakeContainer = originalSnowflake.parentNode;\n  snowflakeContainer.style.display = 'block';\n\n  // получаем размер окна браузера\n  browserWidth = document.documentElement.clientWidth;\n  browserHeight = document.documentElement.clientHeight;\n\n  // создаем снежинку\n  for (var i = 0; i < numberOfSnowflakes; i++) {\n    // клонируем индивидуальную снежинку и добавляем ее в snowflakeContainer\n    var snowflakeClone = originalSnowflake.cloneNode(true);\n    snowflakeContainer.appendChild(snowflakeClone);\n\n    // устанавливаем начальную позицию и свойства для оригинальной снежинки\n    var initialXPos = getPosition(50, browserWidth);\n    var initialYPos = getPosition(50, browserHeight);\n    var speed = 5 + Math.random() * 40;\n\n    // создаем объект Snowflake\n    var snowflakeObject = new Snowflake(snowflakeClone, speed, initialXPos, initialYPos);\n\n    snowflakes.push(snowflakeObject);\n  }\n\n  // убираем снежинку, так как больше не нужно, чтобы она была видимой\n  snowflakeContainer.removeChild(originalSnowflake);\n\n  moveSnowflakes();\n}\n\n//\n// Отвечает за перемещение каждой снежинки, вызывая функцию обновления\n//\nfunction moveSnowflakes() {\n  if (enableAnimations) {\n    for (var i = 0; i < snowflakes.length; i++) {\n      var snowflake = snowflakes[i];\n      snowflake.update();\n    }\n  }\n\n  // Сбрасывает значения позиций всех снежинок до установки нового значения\n  if (resetPosition) {\n    browserWidth = document.documentElement.clientWidth;\n    browserHeight = document.documentElement.clientHeight;\n\n    for (var i = 0; i < snowflakes.length; i++) {\n      var snowflake = snowflakes[i];\n\n      snowflake.xPos = getPosition(50, browserWidth);\n      snowflake.yPos = getPosition(50, browserHeight);\n    }\n\n    resetPosition = false;\n  }\n\n  requestAnimationFrame(moveSnowflakes);\n}\n\n//\n\nfunction getPosition(offset, size) {\n  return Math.round(-1 * offset + Math.random() * (size + 2 * offset));\n}\n\n//\n// Сброс позиций всех снежинок\n//\nfunction setResetFlag(e) {\n  resetPosition = true;\n}\n"]}